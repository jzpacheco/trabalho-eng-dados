version: '3.8'

x-common:
  &common
  # image: apache/airflow:2.10.3
  build: .
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./scripts:/opt/airflow/scripts
    - ./data:/opt/airflow/data

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9090:9090'
    volumes:
      - './minio_data:/minio_data'
    env_file:
      - .env
    command: server --console-address ":9090" /minio_data

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags}
        exec /entrypoint airflow version

  spark:
    <<: [*common, *depends-on]
    image: bitnami/spark:latest
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8081:8080"
    environment:
      - SPARK_MODE=master
      - SPARK_HADOOP_FS_S3A_ACCESS_KEY=${MINIO_ROOT_USER}
      - SPARK_HADOOP_FS_S3A_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - SPARK_HADOOP_FS_S3A_ENDPOINT=http://minio:9000
      - SPARK_HADOOP_FS_S3A_CONNECTION_SSL_ENABLED=false
      - SPARK_HADOOP_FS_S3A_IMPL=org.apache.hadoop.fs.s3a.S3AFileSystem
      - SPARK_HADOOP_HOME=/opt/hadoop 
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./scripts:/opt/spark/scripts
    command:  |
      /bin/bash -c '
        /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.master.Master
      '
    restart: always

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    depends_on:
      - spark

  # spark-worker-2:
  #   image: bitnami/spark:latest
  #   container_name: spark-worker-2
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER=spark://spark:7077
  #   depends_on:
  #     - spark

  # # Adicione mais workers conforme necessÃ¡rio
  # spark-worker-3:
  #   image: bitnami/spark:latest
  #   container_name: spark-worker-3
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER=spark://spark:7077
  #   depends_on:
  #     - spark